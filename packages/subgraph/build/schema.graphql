type ContractOwnerWithdrawal @entity(immutable: true) {
  id: Bytes!
  contractOwner: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Donation @entity {
  id: Bytes!
  fundRunId: Int! # uint16
  donor: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  fundRun: FundRun
}

type FundRun @entity {
  id: Bytes!
  fundRunId: Int! # uint16
  owners: [Bytes!]! # address[]
  title: String! # string
  description: String! # string
  amountCollected: BigInt! # uint256
  amountWithdrawn: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  proposals: [Proposal!] @derivedFrom(field: "fundRun")
}

type MultisigTransfer @entity(immutable: true) {
  id: Bytes!
  proposalId: Int! # uint16
  fundRunId: Int! # uint16
  to: Bytes! # address
  netWithdrawAmount: BigInt! # uint256
  grossWithdrawAmount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Proposal @entity {
  id: Bytes!
  proposalId: Int! # uint16
  fundRunId: Int! # uint16
  proposedBy: Bytes! # address
  amount: BigInt! # uint256
  to: Bytes! # address
  reason: String! # string
  status: Int! # uint8
  signaturesRequired: BigInt! # uint256
  signaturesCount: Int! # uint16
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  signatures: [ProposalSignature!] @derivedFrom(field: "proposal")
  fundRun: FundRun
}

type ProposalSignature @entity {
  id: Bytes!
  proposalId: Int! # uint16
  signer: Bytes! # address
  signature: Bytes! # bytes
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  proposal: Proposal
}

type SocialProposal @entity {
  id: Bytes!
  socialProposalId: Int! # uint16
  fundRunId: Int! # uint16
  proposedBy: Bytes! # address
  postText: String! # string
  status: Int! # uint8
  signaturesRequired: BigInt! # uint256
  signaturesCount: Int! # uint16
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  signatures: [SocialProposalSignature!] @derivedFrom(field: "socialProposal")
  fundRun: FundRun
}

type SocialProposalSignature @entity {
  id: Bytes!
  socialProposalId: Int! # uint16
  signer: Bytes! # address
  signature: Bytes! # bytes
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  socialProposal: SocialProposal
}

type ProposalRevoke @entity(immutable: true) {
  id: Bytes!
  proposalId: Int! # uint16
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SocialProposalRevoke @entity(immutable: true) {
  id: Bytes!
  socialProposalId: Int! # uint16
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SocialPost @entity(immutable: true) {
  id: Bytes!
  socialProposalId: Int! # uint16
  fundRunId: Int! # uint16
  proposedBy: Bytes! # address
  postText: String!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}